if [[ `uname` == 'Linux'  ]]
then
    export LINUX=1
    export GNU_USERLAND=1
    export SHELL="/usr/bin/zsh"
    if [[ -e "/usr/bin/tmux-next" ]]
    then
        export TMUX_PATH="/usr/bin/tmux-next"
    else
        export TMUX_PATH="/usr/bin/tmux"
    fi
else
    export LINUX=
fi

if [[ `uname` == 'Darwin'  ]]
then
    export OSX=1
    export SHELL="/usr/local/bin/zsh"
    export TMUX_PATH="/usr/local/bin/tmux"
else
    export OSX=
fi

if [[ "$SSH_CONNECTION" ]]
then
    export REMOTE_SESSION=1
else
    export REMOTE_SESSION=
fi

# Detect Homebrew GNU userland installation
if [[ "$OSX" == "1"  ]]
then
    if [[ -e /usr/local/opt/coreutils  ]]
    then
        export GNU_USERLAND=1
    fi
fi

export DOTFILES=$HOME/.dotfiles

export TRUE_COLOR=`$TMUX_PATH info | grep Tc | grep -o true`

source "$DOTFILES/zsh/private.zsh"

module_path=($module_path /usr/local/lib/zpython)

autoload run-help
HELPDIR=/usr/local/share/zsh/help

# fpath=(/usr/local/share/zsh-completions $fpath)

# Path to your oh-my-zsh installation.
export ZSH=$DOTFILES/submodules/oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="powerline"
# POWERLINE_HIDE_HOST_NAME="true"
# POWERLINE_NO_BLANK_LINE="true"
# POWERLINE_DISABLE_RPROMPT="true"
#
ZSH_THEME_TERM_TITLE_TYPE=screen

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="false"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.


if [[ "$OSX" == "1"  ]]
then
    plugins=(
        colored-man
        command-not-found
        docker
        docker-compose
        fzf
        git
        gnu-utils
        httpie
        kubectl
        npm
        nvm
        osx
        pip
        pyenv
        shrink-path
        sudo
        yarn
        zsh-autosuggestions
        zsh-iterm-touchbar
        zsh-syntax-highlighting
    )
else
    plugins=(
        aws
        bower
        colored-man
        command-not-found
        dirpersist
        docker
        gem
        gitfast
        git-extras
        git-flow
        gitignore
        gnu-utils
        httpie
        jsontools
        npm
        pip
        sudo
        supervisor
        tmux
        ubuntu
        zsh-autosuggestions
        zsh-completions
        zsh_reload
        zsh-syntax-highlighting
    )
fi
# User configuration
if [[ "$OSX" == "1" ]]
then
    export PATH="$HOME/.local/bin:/usr/local/opt/python/libexec/bin:/usr/local/opt/coreutils/libexec/gnubin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/opt/FDK/Tools/osx:/Library/TeX/texbin/"
else
    export PATH="$HOME/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin"
fi
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

autoload -U compinit && compinit

eval $(thefuck --alias)

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
#alias zshconfig="mate ~/.zshrc"
#alias ohmyzsh="mate ~/.oh-my-zsh"


# enable color support of ls and also add handy aliases
test -r ~/.dir_colors && eval "$(dircolors -b ~/.dir_colors)" || eval "$(dircolors -b)"
alias ls='ls -F --color=auto'
#alias dir='dir --color=auto'
#alias vdir='vdir --color=auto'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# less alias
alias less='less -R'
export LESS='-R'
export LESSOPEN='|~/.lessfilter %s'

if [[ -e `which nvim` ]]
then
    alias vim=nvim
    export GIT_EDITOR=nvim
    export VISUAL=nvim
    export EDITOR=nvim
elif [[ -e `which mvim` ]]
then
    alias vim='mvim -v'
    export GIT_EDITOR="mvim -v"
    export VISUAL="mvim -v"
    export EDITOR="mvim -v"
else
    export GIT_EDITOR=vim
    export VISUAL=vim
    export EDITOR=vim
fi

# bindkey -v
export KEYTIMEOUT=1

# google-cloud-sdk (homebrew)
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'

export NVM_DIR=~/.nvm

# iTerm2 Shell Integration
if [[ "$ITERM_SESSION_ID" != ""  ]]
then
    source "$HOME/.iterm2_shell_integration.zsh"
fi

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=10'

source $DOTFILES/zsh/shell_prompt.zsh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

precmd() {
    tmux rename-window  `/usr/local/bin/super_pwd $("pwd")`
}

eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib=$HOME/perl5)"
