CASE_SENSITIVE="true"
if [[ `uname` == 'Linux'  ]]
then
  export LINUX=1
  export GNU_USERLAND=1
  export SHELL="/usr/bin/zsh"
  if [[ -e "/usr/bin/tmux-next" ]]
  then
    export TMUX_PATH="/usr/bin/tmux-next"
  else
    export TMUX_PATH="/usr/bin/tmux"
  fi
else
  export LINUX=
fi

if [[ `uname` == 'Darwin'  ]]
then
  export OSX=1
  export SHELL="/usr/local/bin/zsh"
  export TMUX_PATH="/usr/local/bin/tmux"
else
  export OSX=
fi

if [[ "$SSH_CONNECTION" ]]
then
  export REMOTE_SESSION=1
else
  export REMOTE_SESSION=
fi

export TRUE_COLOR=`$TMUX_PATH info | grep Tc | grep -o true`

autoload run-help
HELPDIR=/usr/local/share/zsh/help

export PATH="$HOME/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin"

if [[ -e /usr/local/bin/brew ]]
then
  export HOMEBREW_PREFIX="/usr/local"
  export HOMEBREW_CELLAR="/usr/local/Cellar"
  export HOMEBREW_REPOSITORY="/usr/local/Homebrew"
  export MANPATH="/usr/local/share/man:$MANPATH"
  export INFOPATH="/usr/local/share/info:$INFOPATH"
  if [[ -e /usr/local/opt/coreutils ]]; then export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"; fi
  if [[ -e /usr/local/opt/gnu-tar ]]; then export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"; fi
  if [[ -e /usr/local/opt/llvm ]]; then export PATH="/usr/local/opt/llvm/bin:$PATH"; fi
  if [[ -e /usr/local/opt/python ]]; then export PATH="/usr/local/opt/python/libexec/bin:$PATH"; fi
  export PATH="$HOME/.local/bin:$PATH"
else
fi

fpath+=${ZDOTDIR:-~}/.zsh_functions
export DOTFILES=$HOME/.dotfiles
source $DOTFILES/zsh/private.zsh

# google-cloud-sdk (homebrew)
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'

# source '/usr/local/opt/asdf/asdf.sh'
# source '/usr/local/opt/asdf/etc/bash_completion.d/asdf.bash'

source $HOME/antigen.zsh
antigen init $HOME/.antigenrc

alias ls='ls -F --color=auto'
#alias dir='dir --color=auto'
#alias vdir='vdir --color=auto'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# less alias
alias less='less -R'
export LESS='-R'
export LESSOPEN='|~/.lessfilter %s'

alias yolo='git commit -am "$(curl -s https://whatthecommit.com/index.txt)"'

if [[ -e `which nvim` ]]
then
  alias vim=nvim
  export GIT_EDITOR=nvim
  export VISUAL=nvim
  export EDITOR=nvim
else
  export GIT_EDITOR=vim
  export VISUAL=vim
  export EDITOR=vim
fi

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'

export SHORT_PWD="$(/usr/local/bin/python3 /usr/local/bin/super_pwd $PWD)"
function shorten_pwd() {
  export SHORT_PWD="$(/usr/local/bin/python3 /usr/local/bin/super_pwd $PWD)"
}

chpwd_functions=(${chpwd_functions[@]} "shorten_pwd")

function tmux_window_pwd() {
  tmux rename-window "$SHORT_PWD"
}
precmd_functions=(${precmd_functions[@]} "tmux_window_pwd")

eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib=$HOME/perl5)"

homebrew_command_not_found_handle() {
  local cmd="$1"
  local txt="$(brew which-formula --explain $cmd 2>/dev/null)"

  if [ -z "$txt" ]; then
    echo "zsh: command not found: $cmd" >&2
  else
    echo "$txt"
  fi

  return 127
}

command_not_found_handler() {
  homebrew_command_not_found_handle $*
  return $?
}

# Go development
export GOPATH="${HOME}/.go"
export GOROOT="/usr/local/opt/golang/libexec"
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"
test -d "${GOPATH}" || mkdir "${GOPATH}"
test -d "${GOPATH}/src/github.com" || mkdir -p "${GOPATH}/src/github.com"

export PYTHON_CONFIGURE_OPTS="--enable-framework"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
source ~/.dotfiles/zsh/shell_prompt.zsh
export PATH="/usr/local/opt/openjdk@11/bin:$PATH"
