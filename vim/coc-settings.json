{
  // could be 'always' 'trigger' => for specified trigger characters only 'none'
  "coc.preferences.autoTrigger": "always",
  // only used when autoTrigger is always
  "coc.preferences.triggerAfterInsertEnter": false,
  // timeout for completion
  "coc.preferences.timeout": 2000,
  // not make vim select first item on completion start
  "coc.preferences.noselect": true,
  // enable formatOnType feature
  "coc.preferences.formatOnType": false,
  // command used for jump to other buffer
  "coc.preferences.jumpCommand": "edit",
  // executable path for https://facebook.github.io/watchman/, detected from $PATH by default
  // "coc.preferences.watchmanPath": "",
  // enable diagnostic
  "coc.preferences.diagnostic.enable": true,
  "coc.preferences.diagnostic.signOffset": 1000,
  "coc.preferences.diagnostic.errorSign": ">>",
  "coc.preferences.diagnostic.warningSign": "âš ",
  "coc.preferences.diagnostic.infoSign": ">>",
  "coc.preferences.diagnostic.hintSign": ">>",
  "coc.preferences.colorSupport": false,
  "pyls.configurationSources": ["flake8"],
  "pyls.plugins.pycodestyle.enabled": false,
  "pyls.plugins.pyflakes.enabled": false,
  "pyls.plugins.rope_completion.enabled": false,
  "pyls.plugins.jedi_completion.enabled": true,
  "pyls.plugins.yapf.enabled": false,
  "pyls.plugins.autopep8.enabled": false,
  "languageserver": {
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["Dockerfile"],
      "args": ["--stdio"]
    },
    "cquery": {
      "command": "cquery",
      "args": ["--log-file=/tmp/cq.log"],
      "filetypes": ["c", "cpp"],
      "rootPatterns": [
        "compile_flags.txt",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cacheDirectory": "/tmp/cquery"
      }
    },
    "clangd": {
      "command": "clangd",
      "rootPatterns": [
        "compile_flags.txt",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "filetypes": ["objc", "objcpp"]
    },
    "golang": {
      "command": "go-langserver",
      "filetypes": ["go"],
      "initializationOptions": {
        "gocodeCompletionEnabled": true,
        "diagnosticsEnabled": true,
        "lintTool": "golint"
      }
    },
    "phplang": {
      "command": "php",
      "args": [
        "vendor/felixfbecker/language-server/bin/php-language-server.php"
      ],
      "filetypes": ["php"]
    },
    // "haskell": {
    //   "command": "hie-wrapper",
    //   "rootPatterns": [".stack.yaml", "cabal.config", "package.yaml"],
    //   "filetypes": ["hs", "lhs", "haskell"],
    //   "initializationOptions": {}
    // },
    "lua": {
      "command": "lua-lsp",
      "filetypes": ["lua"]
    }
  }
}
